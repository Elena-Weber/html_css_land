.title {
    text-align: center;
    padding: 2rem 0;
    background-color: var(--color-gray-light1);

    @media only screen and (max-width: $breakpoint-largest) {
        background-color: var(--color-primary);
    }

    @media only screen and (max-width: $breakpoint-large) {
        padding: 1.5rem 0;
    }

    @media only screen and (max-width: $breakpoint-medium) {
        padding: 1rem 0;
    }

    @media only screen and (max-width: $breakpoint-smallest) {
        padding: .5rem 0;
    }

    &-name {
        font-size: 3rem;
        color: var(--color-primary-dark);
        letter-spacing: 1px;

        @media only screen and (max-width: $breakpoint-largest) {
            color: var(--color-gray-light1);
        }

        @media only screen and (max-width: $breakpoint-large) {
            font-size: 2.1rem;
            letter-spacing: .5px;
        }
    }

    &-par {
        @media only screen and (max-width: $breakpoint-medium) {
            display: none;
        }
    }
}

.logo-div {
    position: relative;
}

.logo {
    height: 4.5rem;
    margin-left: 2rem;
    fill: var(--color-primary); // change color of icon
    display: block;
    position: absolute;
    left: -13.5rem;
    top: -2.2rem;

    @media only screen and (max-width: $breakpoint-smallest) {
        left: -14.5rem;
        top: -1.6rem;
        height: 3.5rem;
    }
}

.search {
    flex: 0 0 40%;
    display: flex;
    align-items: center;
    justify-content: center;

    @media only screen and (max-width: $breakpoint-small) {
        order: 1; // default order is 0, by setting it to 1 this element moves to end of row of elements
        flex: 0 0 100%;
    }

    &__input {
        font-family: inherit; // input does not inherit these automatically
        font-size: inherit;
        background-color: var(--color-gray-light2);
        border: none;
        padding: .7rem 2rem;
        border-radius: 100px;
        width: 90%;
        transition: all .2s;
        margin-right: -3.25rem; // icon moves on top of input

        @media only screen and (max-width: $breakpoint-small) {
            margin-left: -1.5rem;
        }

        @media only screen and (max-width: $breakpoint-smallest) {
            font-size: 1.5rem;
            padding: .5rem 2rem;
        }

        &:focus { // on click
            outline: none;
            width: 100%;
            background-color: var(--color-gray-light3);

            @media only screen and (max-width: $breakpoint-small) {
                width: 95%;
            }
        }

        &::-webkit-input-placeholder {
            font-weight: 100;
            color: var(--color-gray-dark2);
        }
    }

    &input:focus + &__button {
        background-color: var(--color-gray-light3);
    }

    &__button {
        border: none;
        background-color: var(--color-gray-light2);

        &:focus {
            outline: none;
        }

        &:active {
            transform: translateY(2px);
        }
    }

    &__icon {
        height: 2rem;
        width: 2rem;
        fill: var(--color-gray-dark2); // change color of icon

        @media only screen and (max-width: $breakpoint-smallest) {
            height: 1.7rem;
            width: 1.7rem;
        }
    }
}

.user-nav {
    display: flex;
    align-items: center;
    align-self: stretch; // stretches its children to occupy 100% of height

    & > * { // for user-nav and all its direct children (.user-nav__icon-box and .user-nav__user)
        padding: 0 2rem;
        cursor: pointer;
        height: 100%;
        display: flex;
        align-items: center;
    }

    & > *:hover { // for user-nav and all its direct children on hover (.user-nav__icon-box and .user-nav__user)
        background-color: var(--color-gray-light2);
    }

    &__icon {
        height: 2.25rem;
        width: 2.25rem;
        fill: var(--color-gray-dark2);

        &-box {
            position: relative; // for parent element
        }
    }

    &__notification {
        font-size: 1rem;
        height: 1.75rem;
        width: 1.75rem;
        border-radius: 50%;
        background-color: var(--color-red);
        color: white;
        position: absolute; // for children elements
        top: 1.5rem;
        right: 1.1rem;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    &__user {

        &-photo {
            height: 3.75rem;
            border-radius: 50%;
            margin-right: 1rem;
        }
    }

}

.sidebar-nav {
    font-size: 1.4rem;
    list-style: none;
    margin-top: 3.5rem;

    @media only screen and (max-width: $breakpoint-large) {
        display: flex;
        margin: 0;
    }

    @media only screen and (max-width: $breakpoint-smallest) {
        font-size: 1.2rem;
    }

    &__item {
        position: relative;

        &:not(:last-child) {
            margin-bottom: .5rem; // create distance between items except last item

            @media only screen and (max-width: $breakpoint-large) {
                // margin-bottom: 0;
                margin: 0;
            }
        }

        @media only screen and (max-width: $breakpoint-large) {
            flex: 1;
        }

        &::before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            height: 100%;
            width: 3px;
            background-color: var(--color-primary);
            transform: scaleY(0); // do not show effect before hover
            transition: transform .2s, width .4s cubic-bezier(1,0,0,1) .2s, background-color .1s; // duration of effects
            // transform-origin: bottom; // effect starts from bottom (default is center)
        }

        &:hover::before, &--active::before { // chooses first item as active and always with full effect
            transform: scaleY(1); // show effect on hover
            width: 100%;
        }

        &:active::before {
            background-color: var(--color-primary-light); // color temporarily changes on click
        }
    }

    &__link:link,
    &__link:visited {
        color: var(--color-gray-light1);
        text-decoration: none;
        text-transform: uppercase;
        display: block; // creates space between links together with following property
        padding: 1.5rem 3rem;
        display: flex;
        align-items: center;
        position: relative; // so you can see text after effect is applied (otherwise it covers link's text)
        z-index: 10;

        @media only screen and (max-width: $breakpoint-large) {
            justify-content: center;
            padding: 2rem;
        }

        @media only screen and (max-width: $breakpoint-medium) {
            padding: 1.5rem 1rem;
            font-size: 1.2rem;
        }

        @media only screen and (max-width: $breakpoint-smallest) {
            padding: 1rem 0;
        }
    }

    &__icon {
        width: 1.75rem;
        height: 1.75rem;
        fill: currentColor; // change color of icon, inherits color of parent (__link)
        margin-right: 2rem;

        @media only screen and (max-width: $breakpoint-medium) {
            margin-right: 1rem;
        }

        @media only screen and (max-width: $breakpoint-smallest) {
            width: 1.5rem;
            height: 1.5rem;
        }
    }
}

.legal {
    font-size: 1.2rem;
    text-align: center;
    padding: 2.5rem;
    color: var(--color-gray-light4);

    @media only screen and (max-width: $breakpoint-large) {
        display: none;
    }
}

.gallery {
    display: flex;

    &__pic {
        width: 100%;
        display: block;
    }
}

.overview {
    display: flex;
    border-bottom: 1px solid var(--color-gray-light2);
    align-items: center;

    &__heading {
        font-size: 2.25rem;
        font-weight: 400;
        text-transform: uppercase;
        letter-spacing: 1px;
        padding: 1.5rem 3rem;

        @media only screen and (max-width: $breakpoint-medium) {
            font-size: 1.8rem;
            padding: 1.25rem 2rem;
        }

        @media only screen and (max-width: $breakpoint-smallest) {
            font-size: 1.5rem;
            padding: 1rem 1rem;
        }
    }

    &__rating {
        // flex: 1; // expands to occupy 100%
        margin-right: auto; // occupies place to the right
        display: flex;

        &-icon {
            width: 1.75rem;
            height: 1.75rem;
            fill: var(--color-red);

            @media only screen and (max-width: $breakpoint-smallest) {
                width: 1.25rem;
                height: 1.25rem;
            }
        }
    }

    &__location {
        font-size: 1.3rem;
        display: flex;
        align-items: center;

        &-icon {
            width: 1.75rem;
            height: 1.75rem;
            fill: var(--color-red);
            margin-right: .5rem;
        }
    }

    &__average-rating {
        background-color: var(--color-primary);
        margin-left: 3rem;
        color: white;
        align-self: stretch; // stretches to occupy all available space
        padding: 0 2.25rem;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;

        @media only screen and (max-width: $breakpoint-medium) {
            padding: 0 1.5rem;
        }

        @media only screen and (max-width: $breakpoint-smallest) {
            margin-left: 1.5rem;
        }

        &-number {
            font-size: 2.25rem;
            font-weight: 300;
            margin-bottom: -.6rem;

            @media only screen and (max-width: $breakpoint-medium) {
                font-size: 1.8rem;
            }
        }

        &-count {
            font-size: 1.1rem;
            text-transform: uppercase;

            @media only screen and (max-width: $breakpoint-medium) {
                font-size: .9rem;
            }

            @media only screen and (max-width: $breakpoint-smallest) {
                display: none;
            }
        }
    }
}

.btn-inline {
    border: none;
    color: var(--color-primary);
    font-size: inherit;
    border-bottom: 1px solid currentColor;
    padding-bottom: 2px;
    display: inline-block;
    background-color: transparent;
    cursor: pointer;
    transition: all .2s;

    & span {
        margin-left: 3px;
        transition: margin-left .2s;
    }

    &:hover {
        color: var(--color-gray-dark1);

        span {
            margin-left: 8px;
        }
    }

    &:focus {
        outline: none;
        animation: pulsate 1s infinite; // works on click
    }
}

.par:not(:last-of-type) { // not to last sibling (= paragraph)
    margin-bottom: 2rem;
}

.services {
    margin: 3rem 0;
    list-style: none;
    padding: 3rem 0;
    border-bottom: 1px solid var(--color-gray-light2);
    border-top: 1px solid var(--color-gray-light2);
    display: flex;
    flex-wrap: wrap;

    @media only screen and (max-width: $breakpoint-smallest) {
        margin: 2rem 0;
        padding: 2rem 0;
    }

    &__item {
        flex: 0 0 50%; // doesn't expand, doesn't shrink, occupies 50% of parent's width
        margin-bottom: .7rem;

        &::before {
            content: ""; // obligatory when using "before"
            display: inline-block;
            height: 1rem;
            width: 1rem;
            margin-right: .7rem;

            // option for older browsers (doesn't support color change for icons, they'll be black)
            background-image: url(./img/SVG/checkmark.svg);
            background-size: cover;

            // for newer browsers
            @supports (-webkit-mask-image: url()) or (mask-image: url()) {
                background-color: var(--color-primary);
                -webkit-mask-image: url(./img/SVG/checkmark.svg); // cuts out image from bg-color
                mask-image: url(./img/SVG/checkmark.svg);
                -webkit-mask-size: cover;
                mask-size: cover;
                background-image: none; // overwrites black color for icons from previous step for older browsers
            }
        }
    }
}

.recommend {
    color: var(--color-gray-dark2);
    display: flex;
    align-items: center;
    font-size: 1.3rem;

    &__count {
        margin-right: auto; // moves block to the left to give space to another block in this row
    }

    &__friends {
        display: flex;
    }

    &__photo {
        box-sizing: content-box; // don't include border thickness to image size
        height: 3rem;
        width: 3rem;
        border-radius: 50%;
        border: 2px solid white;

        &:not(:last-child) {
            margin-right: -1rem; // images on top of each other
        }

        @media only screen and (max-width: $breakpoint-smallest) {
            height: 2.5rem;
            width: 2.5rem;
        }
    }
}

.review {
    background-color: white;
    box-shadow: 0 1rem 4rem rgba($color: #000000, $alpha: .25);
    padding: 3rem;
    margin-bottom: 3.5rem;
    position: relative;
    overflow: hidden;

    @media only screen and (max-width: $breakpoint-large) {
        padding: 2rem;
        margin-bottom: 3rem;
    }

    @media only screen and (max-width: $breakpoint-smallest) {
        margin-bottom: 2rem;
    }

    &__text {
        margin-bottom: 2rem;
        z-index: 10; // above the picture, works only in pair with "position: relative"
        position: relative;

        @media only screen and (max-width: $breakpoint-smallest) {
            margin-bottom: 1.5rem;
        }
    }

    &__user {
        display: flex;
        align-items: center;

        &-photo {
            width: 6rem;
            height: 6rem;
            border-radius: 50%;
            margin-right: 1.5rem;

            @media only screen and (max-width: $breakpoint-smallest) {
                width: 4rem;
                height: 4rem;
            }
        }

        &-info {
            margin-right: auto; // moves last element to the right
        }

        &-name {
            font-size: 1.3rem;
            font-weight: 500;
            text-transform: uppercase;
            margin-bottom: .4rem;
        }

        &-date {
            font-size: 1.1rem;
            color: var(--color-gray-dark2);
        }
    }

    &__rating {
        color: var(--color-primary);
        font-size: 2.3rem;
        font-weight: 300;

        @media only screen and (max-width: $breakpoint-smallest) {
            font-size: 2rem;
        }
    }

    &::before {
        content: "\201C"; // to show " in CSS
        position: absolute;
        top: -2.75rem;
        left: -1rem;
        font-size: 20rem;
        color: var(--color-gray-light2);
        font-family: sans-serif;
        line-height: 1;
        z-index: 1;
    }
}

.cta {
    padding: 3.5rem 0;
    text-align: center;

    @media only screen and (max-width: $breakpoint-large) {
        padding: 2.5rem 0;
    }

    &__text {
        text-transform: uppercase;
        font-size: 2rem;
        font-weight: 400;
        margin-bottom: 2.5rem;
        letter-spacing: 3px;

        @media only screen and (max-width: $breakpoint-smallest) {
            letter-spacing: 1.5px;
        }
    }
}

.btn {
    font-size: 1.6rem;
    font-weight: 400;
    text-transform: uppercase;
    border-radius: 100px;
    border: none;
    background-image: linear-gradient(to right, var(--color-primary-light), var(--color-primary-dark));
    color: white;
    position: relative;
    overflow: hidden; // hides invisible btn text
    cursor: pointer;

    & > * { // for all children of this element
        height: 100%;
        width: 100%;
        display: inline-block;
        transition: all .2s;
    }
    &-visible {
        padding: 2rem 7.5rem;
    }

    &-invisible {
        position: absolute;
        left: 0;
        top: -100%; // hide it above button
        padding: 2rem 0;
    }

    &:hover {
        background-image: linear-gradient(to left, var(--color-primary-light), var(--color-primary-dark));
    }

    &:hover &-visible {
        transform: translateY(100%); // move down 100% so it's seen inside button
    }

    &:hover &-invisible {
        top: 0; // invisible becomes visible
    }

    &:focus {
        outline: none;
        animation: pulsate 1s infinite;
    }
}

@keyframes pulsate {
    0% {
        transform: scale(1);
        box-shadow: none;
    }

    50% {
        transform: scale(1.05);
        box-shadow: 0 1rem 4rem rgba(0,0,0,.25);
    }

    100% {
        transform: scale(1);
        box-shadow: none;
    }
}